/* Generated By:JJTree&JavaCC: Do not edit this line. SQLParserConstants.java */
package sqlParser;
/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLParserConstants {

    /** End of File. */
    int EOF = 0;
    /** RegularExpression Id. */
    int CREATE = 5;
    /** RegularExpression Id. */
    int TABLE = 6;
    /** RegularExpression Id. */
    int PRIMARY = 7;
    /** RegularExpression Id. */
    int FOREIGN = 8;
    /** RegularExpression Id. */
    int REFERENCES = 9;
    /** RegularExpression Id. */
    int RESTRICT = 10;
    /** RegularExpression Id. */
    int CASCADE = 11;
    /** RegularExpression Id. */
    int KEY = 12;
    /** RegularExpression Id. */
    int DROP = 13;
    /** RegularExpression Id. */
    int SELECT = 14;
    /** RegularExpression Id. */
    int INSERT = 15;
    /** RegularExpression Id. */
    int WHERE = 16;
    /** RegularExpression Id. */
    int FROM = 17;
    /** RegularExpression Id. */
    int INTO = 18;
    /** RegularExpression Id. */
    int UPDATE = 19;
    /** RegularExpression Id. */
    int SET = 20;
    /** RegularExpression Id. */
    int DISTINCT = 21;
    /** RegularExpression Id. */
    int LIKE = 22;
    /** RegularExpression Id. */
    int ORDER = 23;
    /** RegularExpression Id. */
    int BY = 24;
    /** RegularExpression Id. */
    int VALUES = 25;
    /** RegularExpression Id. */
    int AND = 26;
    /** RegularExpression Id. */
    int OR = 27;
    /** RegularExpression Id. */
    int INT = 28;
    /** RegularExpression Id. */
    int CHAR = 29;
    /** RegularExpression Id. */
    int DATE = 30;
    /** RegularExpression Id. */
    int DELETE = 31;
    /** RegularExpression Id. */
    int UNDERSCORE = 32;
    /** RegularExpression Id. */
    int COMMA = 33;
    /** RegularExpression Id. */
    int SEMICOLON = 34;
    /** RegularExpression Id. */
    int COLON = 35;
    /** RegularExpression Id. */
    int LEFTPARENTHESES = 36;
    /** RegularExpression Id. */
    int RIGHTPARENTHESES = 37;
    /** RegularExpression Id. */
    int EQUAL = 38;
    /** RegularExpression Id. */
    int PLUS = 39;
    /** RegularExpression Id. */
    int MINUS = 40;
    /** RegularExpression Id. */
    int TIMES = 41;
    /** RegularExpression Id. */
    int DIVIDE = 42;
    /** RegularExpression Id. */
    int POINT = 43;
    /** RegularExpression Id. */
    int GREATER = 44;
    /** RegularExpression Id. */
    int LESS = 45;
    /** RegularExpression Id. */
    int LEFTQUOTATION = 46;
    /** RegularExpression Id. */
    int LQUOTATION = 47;
    /** RegularExpression Id. */
    int INTEGER_LITERAL = 48;
    /** RegularExpression Id. */
    int DIGIT = 49;
    /** RegularExpression Id. */
    int IDENTIFIER = 50;
    /** RegularExpression Id. */
    int LETTER = 51;

    /** Lexical state. */
    int DEFAULT = 0;

    /** Literal token values. */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\n\"",
            "\"\\r\"",
            "\"create\"",
            "\"table\"",
            "\"primary\"",
            "\"foreign\"",
            "\"references\"",
            "\"restrict\"",
            "\"cascade\"",
            "\"key\"",
            "\"drop\"",
            "\"select\"",
            "\"insert\"",
            "\"where\"",
            "\"from\"",
            "\"into\"",
            "\"update\"",
            "\"set\"",
            "\"distinct\"",
            "\"like\"",
            "\"order\"",
            "\"by\"",
            "\"values\"",
            "\"and\"",
            "\"or\"",
            "\"int\"",
            "\"char\"",
            "\"date\"",
            "\"delete\"",
            "\"_\"",
            "\",\"",
            "\";\"",
            "\":\"",
            "\"(\"",
            "\")\"",
            "\"=\"",
            "\"+\"",
            "\"-\"",
            "\"*\"",
            "\"/\"",
            "\".\"",
            "\">\"",
            "\"<\"",
            "\"\\\"\"",
            "\"\\\'\"",
            "<INTEGER_LITERAL>",
            "<DIGIT>",
            "<IDENTIFIER>",
            "<LETTER>",
    };

}
